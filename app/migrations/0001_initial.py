# Generated by Django 5.0.10 on 2025-01-22 01:32

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('confac', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conseq_losses', models.PositiveSmallIntegerField(default=0, verbose_name='Consequetive losses')),
                ('on_status', models.BooleanField(default=True, verbose_name='On/Off')),
                ('balance', models.FloatField(default=0, verbose_name='Relative balance (in R/R)')),
            ],
            options={
                'ordering': ['pair__altname'],
            },
        ),
        migrations.CreateModel(
            name='BotGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Oanda', max_length=16)),
                ('interval_short', models.IntegerField(choices=[(1, 'M1'), (5, 'M5'), (15, 'M15'), (30, 'M30'), (60, 'H1'), (240, 'H4'), (1440, 'D'), (10080, 'W')], default=5)),
                ('interval_long', models.IntegerField(choices=[(1, 'M1'), (5, 'M5'), (15, 'M15'), (30, 'M30'), (60, 'H1'), (240, 'H4'), (1440, 'D'), (10080, 'W')], default=240)),
                ('risk', models.PositiveSmallIntegerField(default=2, verbose_name='Max pecentage of account balance to risk on one order')),
                ('traiding_balance', models.FloatField(blank=True, null=True, verbose_name='Max. balance available for trading in home currency')),
                ('balance', models.FloatField(default=0, verbose_name='Profit/loss in quote currency')),
                ('max_conseq', models.PositiveSmallIntegerField(default=3, verbose_name='Maximum losses in a row before pair is shutdown')),
                ('max_conseq_all', models.PositiveSmallIntegerField(default=10, verbose_name='Maximum losses in a row before bot is shutdown')),
                ('conseq_losses', models.PositiveSmallIntegerField(default=0, verbose_name='Consequetive losses')),
                ('buffer_multiplier', models.FloatField(default=1, verbose_name='ATR multiplier for stop/loss')),
                ('limit_multiplier', models.FloatField(default=0.1, verbose_name='ATR multiplier for limit')),
                ('on_status', models.BooleanField(default=True, verbose_name='On/Off')),
                ('autorefresh', models.BooleanField(default=True, verbose_name='Auto refresh bot page')),
                ('smooth', models.BooleanField(default=False, verbose_name='Smooth last candle')),
                ('margin', models.BooleanField(default=True, verbose_name='Trade with margin')),
                ('min_order', models.BooleanField(default=False, verbose_name='Place minimal order possible')),
                ('single', models.BooleanField(default=True, verbose_name='One position at a time only')),
                ('bots', models.ManyToManyField(blank=True, to='app.bot', verbose_name='Instruments')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('origin', models.CharField(blank=True, max_length=64, null=True)),
                ('ltype', models.CharField(default='G', max_length=1)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.bot')),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_dir', models.CharField(choices=[('LONG', 'Long'), ('SHORT', 'Short')], max_length=5)),
                ('price', models.FloatField(verbose_name='Position entry price')),
                ('stopprice', models.FloatField(blank=True, null=True, verbose_name='Stop-loss trigger price')),
                ('vol', models.FloatField(blank=True, null=True, verbose_name='Volume')),
                ('opentm', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Open time')),
                ('closetm', models.DateTimeField(blank=True, null=True, verbose_name='Close time')),
                ('closeprice', models.FloatField(blank=True, null=True, verbose_name='Close price')),
                ('net', models.FloatField(default=0)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('FILLED', 'Filled'), ('TRIGGERED', 'Triggered'), ('CANCELLED', 'Cancelled'), ('OPEN', 'Open'), ('CLOSED', 'Closed')], max_length=9)),
                ('close_status', models.CharField(blank=True, choices=[('S', 'Stopped'), ('T', 'Touched')], max_length=1)),
                ('rvr', models.FloatField(blank=True, null=True, verbose_name='Risk vs Reward')),
                ('order_id', models.CharField(blank=True, max_length=24, verbose_name='Order ID')),
                ('trade_id', models.CharField(blank=True, max_length=24, verbose_name='Trade ID')),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.bot')),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Pair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('altname', models.CharField(max_length=16, verbose_name='Display name')),
                ('cost_decimals', models.PositiveSmallIntegerField(verbose_name='Price precision')),
                ('lot_decimals', models.PositiveSmallIntegerField(verbose_name='Volume precision')),
                ('ordermin', models.FloatField(verbose_name='Minimal order volume')),
                ('max_leverage', models.PositiveSmallIntegerField(default=1, verbose_name='Maximum leverage')),
                ('base', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='base_pairs', to='app.asset')),
                ('quote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quote_pairs', to='app.asset')),
            ],
            options={
                'ordering': ['altname'],
            },
        ),
        migrations.AddField(
            model_name='bot',
            name='pair',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.pair'),
        ),
    ]
